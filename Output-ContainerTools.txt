========== Pulling Images ==========
Pulling missing Docker images. To cancel this download, close the command prompt window. To disable image auto-pull, see Tools > Options > Container Tools.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
docker pull mcr.microsoft.com/dotnet/sdk:5.0
docker pull completed
========== Preparing Containers ==========
Getting Docker containers ready...
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never config
services:
  db:
    container_name: maleki-sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: D9OUXpYkiWeOAZ9m21HU
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
    - published: 5003
      target: 1433
    user: root
    volumes:
    - D:\Mc2.CrudTestCrude\Docker\mssql2019:/var/opt/mssql/data:rw
  webapi:
    build:
      context: D:\mycomputer-d\Maleki\crud-test-csharp
      dockerfile: Mc2.CrudTest.Presentation/Server/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Mc2.CrudTest.Presentation.Server
      target: base
    container_name: Mc2.CrudTest.Presentation.Server
    depends_on:
      db:
        condition: service_started
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2
    image: webapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath
        /root/.nuget/fallbackpackages2  "/app/bin/Debug/net5.0/Mc2.CrudTest.Presentation.Server.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - published: 5004
      target: 443
    tty: true
    volumes:
    - D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server:/app:rw
    - C:\Users\s.maleki\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\s.maleki\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\s.maleki\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages:/root/.nuget/fallbackpackages:ro
    - C:\Program Files (x86)\Microsoft\Xamarin\NuGet:/root/.nuget/fallbackpackages2:ro
    - C:\Users\s.maleki\.nuget\packages:/root/.nuget/packages:ro
    - D:\mycomputer-d\Maleki\crud-test-csharp:/src:rw
version: '3.4'
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never build
db uses an image, skipping
Building webapi
#1 [internal] load build definition from Dockerfile
#1 sha256:1ae55602efded795cb03319354adc33cee7d8bcab4b6011fd36ae0c04f41ac9b
#1 transferring dockerfile: 32B 0.0s done
#1 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:fce49bf63bbc2b3c4803755097d6a371a10b90ef0ebebd83eff25739b7d7f308
#2 transferring context: 35B done
#2 DONE 0.0s
#3 [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:5.0
#3 sha256:3b35130338ebb888f84ec0aa58f64d182f10a676a625072200f5903996d93690
#3 DONE 0.0s
#4 [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:5.0
#4 sha256:31acc33a1535ed7869167d21032ed94a0e9b41bbf02055dc5f04524507860176
#4 DONE 0.0s
#5 [base 2/2] WORKDIR /app
#5 sha256:56abde746b4f39a24525b2b730b2dfb6d9688bcf704d367c86a4753aefff33f6
#5 CACHED
#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:396c843d02c01b28bd42031f41a6a2458d26373caf4ec622e76d64a0e7a729e1 done
#6 naming to docker.io/library/webapi:dev done
#6 DONE 0.0s
Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --format {{.ID}};{{.Names}}
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never up -d --no-build --force-recreate --remove-orphans
Creating network "dockercompose6254466608348518323_default" with the default driver
Creating maleki-sql ... 
Creating maleki-sql ... done
Creating Mc2.CrudTest.Presentation.Server ... 
Creating Mc2.CrudTest.Presentation.Server ... done
Done!  Docker containers are ready.
========== Debugging ==========
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --filter "name=^/Mc2.CrudTest.Presentation.Server$" --format {{.ID}} -n 1
a7bdceb5f0b8
Could not find the global property 'UserSecretsId' in MSBuild project 'D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server\Mc2.CrudTest.Presentation.Server.csproj'. Ensure this property is set in the project or use the '--id' command line option.
========== Closing Solution ==========
Shutting down running containers.
========== Switching Docker OS ==========
C:\Program Files\Docker\Docker\DockerCli.exe -SwitchDaemon
========== Pulling Images ==========
Pulling missing Docker images. To cancel this download, close the command prompt window. To disable image auto-pull, see Tools > Options > Container Tools.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
docker pull mcr.microsoft.com/dotnet/sdk:5.0
docker pull completed
========== Preparing Containers ==========
Getting Docker containers ready...
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never config
services:
  db:
    container_name: maleki-sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: D9OUXpYkiWeOAZ9m21HU
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
    - published: 5003
      target: 1433
    user: root
    volumes:
    - D:\Mc2.CrudTestCrude\Docker\mssql2019:/var/opt/mssql/data:rw
  webapi:
    build:
      context: D:\mycomputer-d\Maleki\crud-test-csharp
      dockerfile: Mc2.CrudTest.Presentation/Server/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Mc2.CrudTest.Presentation.Server
      target: base
    container_name: Mc2.CrudTest.Presentation.Server
    depends_on:
      db:
        condition: service_started
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2
    image: webapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath
        /root/.nuget/fallbackpackages2  "/app/bin/Debug/net5.0/Mc2.CrudTest.Presentation.Server.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - published: 5004
      target: 443
    tty: true
    volumes:
    - D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server:/app:rw
    - C:\Users\s.maleki\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\s.maleki\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\s.maleki\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages:/root/.nuget/fallbackpackages:ro
    - C:\Program Files (x86)\Microsoft\Xamarin\NuGet:/root/.nuget/fallbackpackages2:ro
    - C:\Users\s.maleki\.nuget\packages:/root/.nuget/packages:ro
    - D:\mycomputer-d\Maleki\crud-test-csharp:/src:rw
version: '3.4'
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never build
db uses an image, skipping
Building webapi
#1 [internal] load build definition from Dockerfile
#1 sha256:5a4aa626fea46f0a9e2341f36d58bc713ae91bdb87bf7cacf6f2b556a39e1b8a
#1 transferring dockerfile: 32B done
#1 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:3d9b0c296d6ce97c89e46b7046f2de2cb7de9a60c9ceb62182d804e8b2dee752
#2 transferring context: 35B done
#2 DONE 0.0s
#3 [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:5.0
#3 sha256:3b35130338ebb888f84ec0aa58f64d182f10a676a625072200f5903996d93690
#3 DONE 0.0s
#4 [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:5.0
#4 sha256:31acc33a1535ed7869167d21032ed94a0e9b41bbf02055dc5f04524507860176
#4 DONE 0.0s
#5 [base 2/2] WORKDIR /app
#5 sha256:56abde746b4f39a24525b2b730b2dfb6d9688bcf704d367c86a4753aefff33f6
#5 CACHED
#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:396c843d02c01b28bd42031f41a6a2458d26373caf4ec622e76d64a0e7a729e1 done
#6 naming to docker.io/library/webapi:dev done
#6 DONE 0.0s
Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --format {{.ID}};{{.Names}}
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never up -d --no-build --force-recreate --remove-orphans
Creating network "dockercompose6254466608348518323_default" with the default driver
Creating maleki-sql ... 
Creating maleki-sql ... done
Creating Mc2.CrudTest.Presentation.Server ... 
Creating Mc2.CrudTest.Presentation.Server ... done
Done!  Docker containers are ready.
========== Debugging ==========
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --filter "name=^/Mc2.CrudTest.Presentation.Server$" --format {{.ID}} -n 1
========== Debugging ==========
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --filter "name=^/Mc2.CrudTest.Presentation.Server$" --format {{.ID}} -n 1
1feb2cc9a953
Could not find the global property 'UserSecretsId' in MSBuild project 'D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server\Mc2.CrudTest.Presentation.Server.csproj'. Ensure this property is set in the project or use the '--id' command line option.
========== Closing Solution ==========
Shutting down running containers.
========== Pulling Images ==========
Pulling missing Docker images. To cancel this download, close the command prompt window. To disable image auto-pull, see Tools > Options > Container Tools.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
docker pull mcr.microsoft.com/dotnet/sdk:5.0
docker pull completed
========== Preparing Containers ==========
Getting Docker containers ready...
========== Debugging ==========
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --filter "name=^/Mc2.CrudTest.Presentation.Server$" --format {{.ID}} -n 1
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never build
c11aec87dc00
db uses an image, skipping
Building webapi
#1 [internal] load build definition from Dockerfile
#1 sha256:af45cf968a43cc52b1628ff1029b2c8cbbc2d6304b723d3d4a8e426509bd5ab1
#1 transferring dockerfile: 32B done
#1 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:7b2ac0b1527c54f4928cb621ce4ba5e0b9421022659978bb9b676097c2d5cb86
#2 transferring context: 35B done
#2 DONE 0.0s
#3 [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:5.0
#3 sha256:3b35130338ebb888f84ec0aa58f64d182f10a676a625072200f5903996d93690
#3 DONE 0.0s
#4 [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:5.0
#4 sha256:31acc33a1535ed7869167d21032ed94a0e9b41bbf02055dc5f04524507860176
#4 DONE 0.0s
#5 [base 2/2] WORKDIR /app
#5 sha256:56abde746b4f39a24525b2b730b2dfb6d9688bcf704d367c86a4753aefff33f6
#5 CACHED
#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:396c843d02c01b28bd42031f41a6a2458d26373caf4ec622e76d64a0e7a729e1 done
#6 naming to docker.io/library/webapi:dev done
#6 DONE 0.0s
Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --format {{.ID}};{{.Names}}
c11aec87dc00;Mc2.CrudTest.Presentation.Server
d17984f3da86;maleki-sql
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never up -d --no-build
Could not find the global property 'UserSecretsId' in MSBuild project 'D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server\Mc2.CrudTest.Presentation.Server.csproj'. Ensure this property is set in the project or use the '--id' command line option.
maleki-sql is up-to-date
Mc2.CrudTest.Presentation.Server is up-to-date
Done!  Docker containers are ready.
========== Debugging ==========
docker ps --filter "status=running" --filter "label=com.docker.compose.service" --filter "name=^/Mc2.CrudTest.Presentation.Server$" --format {{.ID}} -n 1
fe906ce149d1
Could not find the global property 'UserSecretsId' in MSBuild project 'D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server\Mc2.CrudTest.Presentation.Server.csproj'. Ensure this property is set in the project or use the '--id' command line option.
========== Closing Solution ==========
Shutting down running containers.
========== Checking for Container Prerequisites ==========
Verifying that Docker Desktop is installed...
Docker Desktop is installed.
========== Verifying that Docker Desktop is running... ==========
Verifying that Docker Desktop is running...
Docker Desktop is running.
========== Verifying Docker OS ==========
Verifying that Docker Desktop's operating system mode matches the project's target operating system...
Docker Desktop's operating system mode matches the project's target operating system.
========== Pulling Required Images ==========
Checking for missing Docker images...
Pulling Docker images. To cancel this download, close the command prompt window.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
docker pull mcr.microsoft.com/dotnet/sdk:5.0
Docker images are ready.
========== Warming up container(s) for Mc2.CrudTest.Presentation.Server ==========
Starting up container(s)...
docker build -f "D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server\Dockerfile" --force-rm -t mc2crudtestpresentationserver:dev --target base  --label "com.microsoft.created-by=visual-studio" --label "com.microsoft.visual-studio.project-name=Mc2.CrudTest.Presentation.Server" "D:\mycomputer-d\Maleki\crud-test-csharp" 
#1 [internal] load build definition from Dockerfile
#1 sha256:f620e082ffd9149ff0b1aa739fad076030b5a42ffb9c3a95deff3382ec1d3b71
#1 transferring dockerfile: 1.32kB 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:03a03e01446f8487034d3f5c076980875ea5a0bd23550b734237b101370cd1d0
#2 transferring context: 358B done
#2 DONE 0.0s

#3 [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:5.0
#3 sha256:3b35130338ebb888f84ec0aa58f64d182f10a676a625072200f5903996d93690
#3 DONE 0.0s

#5 [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:5.0
#5 sha256:31acc33a1535ed7869167d21032ed94a0e9b41bbf02055dc5f04524507860176
#5 DONE 0.0s

#4 [base 2/2] WORKDIR /app
#4 sha256:56abde746b4f39a24525b2b730b2dfb6d9688bcf704d367c86a4753aefff33f6
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:396c843d02c01b28bd42031f41a6a2458d26373caf4ec622e76d64a0e7a729e1 done
#6 naming to docker.io/library/mc2crudtestpresentationserver:dev done
#6 DONE 0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
docker run -dt -v "C:\Users\s.maleki\vsdbg\vs2017u5:/remote_debugger:rw" -v "D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server:/app" -v "D:\mycomputer-d\Maleki\crud-test-csharp:/src/" -v "C:\Users\s.maleki\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro" -v "C:\Users\s.maleki\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro" -v "C:\Users\s.maleki\.nuget\packages\:/root/.nuget/fallbackpackages3" -v "C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages:/root/.nuget/fallbackpackages" -v "C:\Program Files (x86)\Microsoft\Xamarin\NuGet\:/root/.nuget/fallbackpackages2" -e "DOTNET_USE_POLLING_FILE_WATCHER=1" -e "ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true" -e "ASPNETCORE_ENVIRONMENT=Development" -e "ASPNETCORE_URLS=https://+:443;http://+:80" -e "NUGET_PACKAGES=/root/.nuget/fallbackpackages3" -e "NUGET_FALLBACK_PACKAGES=/root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2;/root/.nuget/fallbackpackages3" -P --name Mc2.CrudTest.Presentation.Server --entrypoint tail mc2crudtestpresentationserver:dev -f /dev/null 
7273d640b27619044bc0e528a3e54c73bc0ba7b90711fbfa1714e0f723df9ddd
Container started successfully.
========== Finished ==========

========== Closing Solution ==========
Shutting down running containers.
========== Pulling Images ==========
Pulling missing Docker images. To cancel this download, close the command prompt window. To disable image auto-pull, see Tools > Options > Container Tools.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
docker pull mcr.microsoft.com/dotnet/sdk:5.0
docker pull completed
========== Preparing Containers ==========
Getting Docker containers ready...
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never config
services:
  mc2.crudtest.presentation.server:
    build:
      context: D:\mycomputer-d\Maleki\crud-test-csharp
      dockerfile: Mc2.CrudTest.Presentation/Server/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Mc2.CrudTest.Presentation.Server
      target: base
    container_name: Mc2.CrudTest.Presentation.Server
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2
    image: mc2crudtestpresentationserver:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath
        /root/.nuget/fallbackpackages2  "/app/bin/Debug/net5.0/Mc2.CrudTest.Presentation.Server.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - target: 80
    - target: 443
    tty: true
    volumes:
    - D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server:/app:rw
    - C:\Users\s.maleki\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\s.maleki\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\s.maleki\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages:/root/.nuget/fallbackpackages:ro
    - C:\Program Files (x86)\Microsoft\Xamarin\NuGet:/root/.nuget/fallbackpackages2:ro
    - C:\Users\s.maleki\.nuget\packages:/root/.nuget/packages:ro
    - D:\mycomputer-d\Maleki\crud-test-csharp:/src:rw
version: '3.4'
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never build
Building mc2.crudtest.presentation.server
#1 [internal] load build definition from Dockerfile
#1 sha256:03dc2ac9d0e7ea3af7be0b805135568d481a2af74a78c1eeb2ce630aa2a9e83d
#1 transferring dockerfile: 1.32kB done
#1 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:7cfa02b32bd5a777e2f26aad0cb0b670967cc89eede97fe46b238436faa80502
#2 transferring context: 382B done
#2 DONE 0.0s
#3 [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:5.0
#3 sha256:3b35130338ebb888f84ec0aa58f64d182f10a676a625072200f5903996d93690
#3 DONE 0.0s
#4 [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:5.0
#4 sha256:31acc33a1535ed7869167d21032ed94a0e9b41bbf02055dc5f04524507860176
#4 DONE 0.0s
#5 [base 2/2] WORKDIR /app
#5 sha256:56abde746b4f39a24525b2b730b2dfb6d9688bcf704d367c86a4753aefff33f6
#5 CACHED
#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:396c843d02c01b28bd42031f41a6a2458d26373caf4ec622e76d64a0e7a729e1 done
#6 naming to docker.io/library/mc2crudtestpresentationserver:dev done
#6 DONE 0.0s
Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never up -d --no-build --force-recreate --remove-orphans
Creating network "dockercompose6254466608348518323_default" with the default driver
Creating Mc2.CrudTest.Presentation.Server ... 
Creating Mc2.CrudTest.Presentation.Server ... error
ERROR: for Mc2.CrudTest.Presentation.Server  Cannot create container for service mc2.crudtest.presentation.server: Conflict. The container name "/Mc2.CrudTest.Presentation.Server" is already in use by container "7273d640b27619044bc0e528a3e54c73bc0ba7b90711fbfa1714e0f723df9ddd". You have to remove (or rename) that container to be able to reuse that name.
ERROR: for mc2.crudtest.presentation.server  Cannot create container for service mc2.crudtest.presentation.server: Conflict. The container name "/Mc2.CrudTest.Presentation.Server" is already in use by container "7273d640b27619044bc0e528a3e54c73bc0ba7b90711fbfa1714e0f723df9ddd". You have to remove (or rename) that container to be able to reuse that name.
Encountered errors while bringing up the project.
One or more container names used by this project is already in use. Retrying 'docker-compose up' with non-conflicting container names.
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never kill
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never down
Removing network dockercompose6254466608348518323_default
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never config
services:
  mc2.crudtest.presentation.server:
    build:
      context: D:\mycomputer-d\Maleki\crud-test-csharp
      dockerfile: Mc2.CrudTest.Presentation/Server/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Mc2.CrudTest.Presentation.Server
      target: base
    container_name: Mc2.CrudTest.Presentation.Server_1
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2
    image: mc2crudtestpresentationserver:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath
        /root/.nuget/fallbackpackages2  "/app/bin/Debug/net5.0/Mc2.CrudTest.Presentation.Server.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - target: 80
    - target: 443
    tty: true
    volumes:
    - D:\mycomputer-d\Maleki\crud-test-csharp\Mc2.CrudTest.Presentation\Server:/app:rw
    - C:\Users\s.maleki\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\s.maleki\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\s.maleki\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages:/root/.nuget/fallbackpackages:ro
    - C:\Program Files (x86)\Microsoft\Xamarin\NuGet:/root/.nuget/fallbackpackages2:ro
    - C:\Users\s.maleki\.nuget\packages:/root/.nuget/packages:ro
    - D:\mycomputer-d\Maleki\crud-test-csharp:/src:rw
version: '3.4'
docker-compose  -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\docker-compose.override.yml" -f "D:\mycomputer-d\Maleki\crud-test-csharp\obj\Docker\docker-compose.vs.debug.g.yml" -p dockercompose6254466608348518323 --ansi never up -d --no-build --force-recreate --remove-orphans
Creating network "dockercompose6254466608348518323_default" with the default driver
Creating Mc2.CrudTest.Presentation.Server_1 ... 
Creating Mc2.CrudTest.Presentation.Server_1 ... done
Done!  Docker containers are ready.
========== Closing Solution ==========
Shutting down running containers.
========== Pulling Images ==========
Pulling missing Docker images. To cancel this download, close the command prompt window. To disable image auto-pull, see Tools > Options > Container Tools.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
docker pull mcr.microsoft.com/dotnet/sdk:5.0
